% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diff.R
\docType{methods}
\name{diffStr}
\alias{diffStr}
\alias{diffStr,ANY-method}
\title{Diff Object Structures}
\usage{
diffStr(target, current, ...)

\S4method{diffStr}{ANY}(target, current, mode = gdo("mode"),
  context = gdo("context"), line.limit = gdo("line.limit"),
  format = gdo("format"), brightness = gdo("brightness"),
  color.mode = gdo("color.mode"), pager = gdo("pager"),
  style = gdo("style"), palette.of.styles = gdo("palette"),
  max.diffs = gdo("max.diffs"), disp.width = gdo("disp.width"),
  hunk.limit = gdo("hunk.limit"),
  ignore.white.space = gdo("ignore.white.space"),
  convert.hz.white.space = gdo("convert.hz.white.space"),
  tab.stops = gdo("tab.stops"), align.threshold = gdo("align.threshold"),
  frame = parent.frame(), tar.banner = NULL, cur.banner = NULL, ...)
}
\arguments{
\item{target}{the reference object}

\item{current}{the object being compared to \code{target}}

\item{...}{additional arguments to pass on to \code{print}, \code{str}, etc.}

\item{mode}{character(1L), one of:
\itemize{
  \item \dQuote{unified}: diff mode used by \code{git diff}, and the
    default here
  \item \dQuote{sidebyside}: line up the differences side by side
  \item \dQuote{context}: show the target and current hunks in their
    entirety; this mode takes up a lot of screen space but makes it easier
    to see what the objects actually look like
}}

\item{context}{integer(1L) how many lines of context are shown on either side
of differences, set to \code{-1L} to allow as many as there are.  Set to
\dQuote{auto} (default) to display as many as 10 lines or as few as 1
depending on whether total screen lines fit within \code{line.limit} (see
\code{\link{etc}}), or alternatively pass the return value of
\code{\link{auto_context}} to fine tune the parameters of the auto context
calculation.}

\item{line.limit}{integer(2L) or integer(1L), if length 1 how many lines of
output to show, where \code{-1} means no limit.  If length 2, the first
value indicates the threshold of screen lines to begin truncating output,
and the second the number of lines to truncate to, which should be fewer
than the threshold.}

\item{format}{character(1L), controls the diff output format, one of:
\itemize{
  \item \dQuote{auto}: to select output format based on terminal
    capabilities; will attempt to use one of the ANSI formats if they
    appear to be supported, and if not will attempt to use HTML and
    browser output if in interactive mode.
  \item \dQuote{raw}: plain text
  \item \dQuote{ansi8}: color and format diffs using basic ANSI escape
    sequences
  \item \dQuote{ansi256}: like \dQuote{ansi8}, except using the full range
    of ANSI formatting options
  \item \dQuote{html}: color and format using HTML markup
}
Defaults to \dQuote{auto}.  See \code{\link{Palette}} for details on
customization, \code{style} for full control of output format.}

\item{brightness}{character, one of \dQuote{light}, \dQuote{dark},
\dQuote{neutral}, useful for adjusting color scheme to light or dark
terminals.  \dQuote{neutral} by default.  See \code{\link{Palette}} for
details and limitations.  Advanced: you may specify brightness as a
function of \code{format}.  For example, if you typically wish to use a
\dQuote{dark} color scheme, except for when in \dQuote{html} format when
you prefer the \dQuote{light} scheme, you may use
\code{c("dark", html="light")} as the value for this parameter.  This is
particularly useful if \code{format} is set to \dQuote{auto} or if you
want to specify a default value for this parameter via options.  Any names
you use should correspond to a \code{format}.  You must have one unnamed
value which will be used as the default for all \code{format}s that are
not explicitly specified.}

\item{color.mode}{character, one of \dQuote{rgb} or \dQuote{yb}.
Defaults to \dQuote{yb}.  \dQuote{yb} stands for \dQuote{Yellow-Blue} for
color schemes that rely primarily on those colors to style diffs.
Those colors can be easily distinguished by individuals with
limited red-green color sensitivity.  See \code{\link{Palette}} for
details and limitations.  Also offers the same advanced usage as the
\code{brightness} paramter does.}

\item{pager}{character(1L), one of \dQuote{auto} or \dQuote{off}, or a
\code{\link{Pager}} object; controls whether and how a pager is used to
display the diff output.  If \dQuote{auto} will use a pager if output is
to console and exceeds screen height, or will always use a pager if in
interactive mode, not in running in \code{knitr} and in \dQuote{html}
format.}

\item{style}{\dQuote{auto}, or a \code{\link{Style}} object.
\dQuote{auto} by default.  If a \code{Style} object, will override the
the \code{format}, \code{brightness}, and \code{color.mode} parameters.
The \code{Style} object provides full control of diff output styling.
See \code{\link{Style}} for more details.}

\item{palette.of.styles}{\code{\link{StylePalette}} object; advanced usage,
contains all the \code{\link{Style}} objects that are selected by
specifying the \code{format}, \code{brightness}, and \code{color.mode}
parameters.  See \code{\link{StylePalette}} for more details.}

\item{max.diffs}{integer(1L), number of differences after which we abandon
the \code{O(n^2)} diff algorithm in favor of a linear one.  Set to
\code{-1L} to always stick to the original algorithm (defaults to 10000L).}

\item{disp.width}{integer(1L) number of display columns to take up; note that
in \dQuote{sidebyside} \code{mode} the effective display width is half this
number (set to NULL to use \code{getOption("width")}, which is the
default).}

\item{hunk.limit}{integer(2L) or integer (1L), how many diff hunks to show.
Behaves similarly to \code{line.limit}.  How many hunks are in a
particular diff is a function of how many differences, and also how much
\code{context} is used since context can cause two hunks to bleed into
each other and become one.}

\item{ignore.white.space}{TRUE or FALSE, whether to consider differences in
horizontal whitespace (i.e. spaces and tabs) as differences (defaults to
FALSE)}

\item{tab.stops}{integer, what tab stops to use when converting hard tabs to
spaces.  If not integer will be coerced to integer (defaults to 8L).  You
may specify more than one tab stop.  If display width exceeds that
addressable by your tab stops the last tab stop will be repeated.}

\item{align.threshold}{numeric(1L) between 0 and 1, proportion of
words in a line of \code{target} that must be matched in a line of
\code{current} in the same hunk for those lines to be paired up when
displayed (defaults to 0.25).}

\item{frame}{environment the evaluation frame for the \code{print/show/str},
calls, allows user to ensure correct methods are used, not used by
\code{\link{diffChr}} or \code{\link{diffDeparse}}.}

\item{tar.banner}{character(1L) or NULL, text to display ahead of the diff
section representing the target output.  If NULL will be
inferred from \code{target} and \code{current} expressions.}

\item{cur.banner}{character(1L) like \code{tar.banner}, but for
\code{current}}
}
\value{
a \code{\link{Diff}} object; this object has a \code{show}
  method that will display the diff to screen
}
\description{
Compares the \code{str} output of \code{target} and \code{current}.  If
the \code{max.level} parameter to \code{str} is left unspecified, will
attempt to find the largest \code{max.level} that fits within
\code{line.limit} (see \code{\link{etc}}) and shows at least one difference.
}
\details{
Due to the seemingly inconsistent nature of \code{max.level} when used with
objects with nested attributes, and also due to the relative slowness of
\code{str}, this function simulates the effect of \code{max.level} by hiding
nested lines instead of repeatedly calling \code{str} with varying values of
\code{max.level}.
}
\seealso{
\code{\link{diffPrint}} for details on the \code{diff*} functions,
  \code{\link{diffObj}}, \code{\link{diffStr}},
  \code{\link{diffChr}} to compare character vectors directly,
  \code{\link{diffDeparse}} to compare deparsed objects
}

